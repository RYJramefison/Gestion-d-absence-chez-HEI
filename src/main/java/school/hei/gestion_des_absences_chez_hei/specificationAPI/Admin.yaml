openapi: 3.0.0
info:
  title: Admin Management API
  description: API for managing administrators in the system.
  version: 1.0.0
paths:
  /admins:
    get:
      summary: List of all admins
      responses:
        '200':
          description: A list of admins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'
    post:
      summary: Create a new admin
      requestBody:
        description: Admin object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
        required: true
      responses:
        '201':
          description: Admin created successfully
        '400':
          description: Invalid input

  /admins/search:
    get:
      summary: Search for admins with pagination
      parameters:
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: integer
        - name: size
          in: query
          required: true
          description: Page size
          schema:
            type: integer
      responses:
        '200':
          description: A paginated list of admins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'

  /admins/{id}:
    get:
      summary: Retrieve an admin by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the admin to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A single admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '404':
          description: Admin not found

    put:
      summary: Update an existing admin
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the admin to update
          schema:
            type: string
      requestBody:
        description: Admin object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
        required: true
      responses:
        '200':
          description: Admin updated successfully
        '400':
          description: Invalid input
        '404':
          description: Admin not found

    delete:
      summary: Delete an admin by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the admin to delete
          schema:
            type: string
      responses:
        '204':
          description: Admin deleted successfully
        '404':
          description: Admin not found

components:
  schemas:
    Admin:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        contact:
          type: string
      required:
        - id
        - firstName
        - lastName
        - email
        - contact
