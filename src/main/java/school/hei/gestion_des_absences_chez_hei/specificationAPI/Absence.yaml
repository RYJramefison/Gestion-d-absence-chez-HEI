openapi: 3.0.0
info:
  title: Absence Management API
  description: API for managing student absences in the system.
  version: 1.0.0
paths:
  /absences:
    get:
      summary: List of all absences
      responses:
        '200':
          description: A list of absences
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
    post:
      summary: Create a new absence
      requestBody:
        description: Absence object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Absence'
        required: true
      responses:
        '201':
          description: Absence created successfully
        '400':
          description: Invalid input

  /absences/search:
    get:
      summary: Search for absences with pagination
      parameters:
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: integer
        - name: size
          in: query
          required: true
          description: Page size
          schema:
            type: integer
      responses:
        '200':
          description: A paginated list of absences
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true

  /absences/{id}:
    get:
      summary: Retrieve absences by student ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student to retrieve absences for
          schema:
            type: string
      responses:
        '200':
          description: A list of absences for a specific student
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true

  /absence:
    put:
      summary: Update an absence
      parameters:
        - name: studentId
          in: query
          required: true
          description: ID of the student
          schema:
            type: string
        - name: courseId
          in: query
          required: true
          description: ID of the course
          schema:
            type: integer
        - name: isJustify
          in: query
          required: true
          description: Whether the absence is justified
          schema:
            type: boolean
      responses:
        '200':
          description: Absence updated successfully
        '400':
          description: Invalid input

    delete:
      summary: Delete an absence
      parameters:
        - name: studentId
          in: query
          required: true
          description: ID of the student
          schema:
            type: string
        - name: courseId
          in: query
          required: true
          description: ID of the course
          schema:
            type: integer
      responses:
        '204':
          description: Absence deleted successfully
        '404':
          description: Absence not found

components:
  schemas:
    Absence:
      type: object
      properties:
        id:
          type: integer
        courseId:
          type: integer
        studentId:
          type: string
        isJustify:
          type: boolean
      required:
        - courseId
        - studentId
